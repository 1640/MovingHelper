[
 {
  "file": "/Users/tanuj/Desktop/MovingHelper/MovingHelper/Models/Task.swift",
  "offset": 327,
  "remove": 1836,
  "text": "CustomStringConvertible, Equatable {\n  \n  //MARK: Constants\n  \n  \n  //MARK: Property variables\n  \n  public var taskID: Int\n  public var title: String\n  public var notes: String?\n  public var dueDate: TaskDueDate\n  public var done: Bool = false\n  \n  // MARK: Printable\n  public var description: String {\n    return \"\\(title)\"\n  }\n  \n  //MARK: Initializers\n  \n  /**\n  Initializes a task with required values\n  \n  - parameter aTitle:   The title of the task\n  - parameter aDueDate: The due date of the task\n  \n  - returns: The created task with an assigned ID\n  */\n  public init(aTitle: String, aDueDate: TaskDueDate) {\n    title = aTitle\n    dueDate = aDueDate\n    taskID = Task.nextIdentifier()\n  }\n  \n  /**\n  Initializes a task from JSON.\n  \n  - parameter fromJSON: The NSDictionary with the data regarding the task.\n  \n  - returns: The instantiated task object.\n  */\n  public init(fromJSON: NSDictionary) {\n    title = fromJSON.safeString(TaskJSONKey.Title.rawValue)\n    \n    let dueDateString = fromJSON.safeString(TaskJSONKey.DueDate.rawValue)\n    if let enumDueDate = TaskDueDate(rawValue: dueDateString) {\n      dueDate = enumDueDate\n    } else {\n      dueDate = TaskDueDate.OneDayBefore\n    }\n    \n    let fromJSONNotes = fromJSON.safeString(TaskJSONKey.Notes.rawValue)\n    if fromJSONNotes.lengthOfBytesUsingEncoding(NSUTF8StringEncoding) > 0 {\n      notes = fromJSONNotes\n    }\n    \n    done = fromJSON.safeBoolean(TaskJSONKey.Done.rawValue)\n    taskID = fromJSON.safeInt(TaskJSONKey.TaskID.rawValue)\n    \n    if taskID == 0 {\n      taskID = Task.nextIdentifier()\n    }\n  }\n  \n  \n  static func tasksFromArrayOfJSONDictionaries(arrayOfDictionaries: [NSDictionary]) -> [Task] {\n    var tasks = [Task]()\n    for dict in arrayOfDictionaries {\n      tasks.append(Task(fromJSON: dict))\n    }\n    \n    return tasks\n  }\n  \n  //MARK: Identifier generation\n  \n  /**\n  - ",
 }
]
